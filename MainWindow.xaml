<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="WpfApp.MainWindow"
        mc:Ignorable="d"
        Title="Paint" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="Flag" TargetType="{x:Type RadioButton}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border BorderBrush="Transparent" Background="Transparent" BorderThickness="1">
                                    <Canvas Background="Transparent" Height="20px" Width="20px" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Height="20px" Width="20px"/>
                                    </Canvas>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border BorderBrush="Aqua" Background="AliceBlue" BorderThickness="1">
                                    <Canvas Height="20px" Width="20px" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Height="20px" Width="20px"/>
                                    </Canvas>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="TextRadioButton" TargetType="{x:Type RadioButton}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border BorderBrush="Transparent" Background="Transparent" BorderThickness="1">
                                    <WrapPanel Background="Transparent" Height="20px" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Label Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Height="23px" VerticalAlignment="Top" FontSize="12"></Label>
                                    </WrapPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border BorderBrush="Aqua" Background="AliceBlue" BorderThickness="1">
                                    <WrapPanel Background="Transparent" Height="20px" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Label Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Height="23px" VerticalAlignment="Top" FontSize="12"></Label>
                                    </WrapPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="EmptyComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>




        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type local:TextComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=templateRoot}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" HorizontalAlignment="Left" Width="58"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding Capture}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>

                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="TextComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="EmptyComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource EmptyComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.CreateCommand}" Executed="CreateCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindow.OpenCommand}" Executed="OpenCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindow.CloseCommand}" Executed="CloseCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindow.SaveCommand}" Executed="SaveCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindow.SaveNewCommand}" Executed="SaveNewCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindow.HelpCommand}" Executed="HelpCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindow.PrintCommand}" Executed="PrintCommand_Executed" />
    </Window.CommandBindings>
    <DockPanel LastChildFill="True">
        <StackPanel Background="#efefef" DockPanel.Dock="Top">
            <ToolBarTray IsLocked="True">
                <ToolBar BorderBrush="Gray" BorderThickness="0 0 0 1" HorizontalContentAlignment="Stretch"  Loaded="ToolBar_Loaded"
                         Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}">

                    <Button Command="{x:Static local:MainWindow.SaveCommand}">
                        <Image Source="pack://application:,,,/Resources/Images/ToolBar/готовый файл.png" Width="15px" Height="15px"/>
                    </Button>
                </ToolBar>
            </ToolBarTray>
            <Menu BorderBrush="Gray" BorderThickness="0 0 0 1">
                <MenuItem Header="_Файл" BorderBrush="Gray" BorderThickness="0 0 1 0">
                    <MenuItem Header="_Создать" Command="{x:Static local:MainWindow.CreateCommand}" >
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/Images/File/добавить файл.png"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="Open" Header="_Открыть" Command="{x:Static local:MainWindow.OpenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/Images/File/Папка2.png"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="Save" Header="_Сохранить" Command="{x:Static local:MainWindow.SaveCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/Images/File/загрузить файл2.png"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="SaveAs" Header="_Сохранить как" Command="{x:Static local:MainWindow.SaveNewCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/Images/File/создать файл.png"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator></Separator>
                    <MenuItem Name="Print" Header="_Печать" Command="{x:Static local:MainWindow.PrintCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/Images/File/printer-icon.png"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Справка" BorderBrush="Gray" Command="{x:Static local:MainWindow.HelpCommand}" BorderThickness="0 0 1 0"/>
            </Menu>
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="SeparatorKey" TargetType="{x:Type Separator}">
                        <Setter Property="LayoutTransform" >
                            <Setter.Value>
                                <RotateTransform Angle="90" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>
                <StackPanel HorizontalAlignment="Center">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <RadioButton GroupName="Tools" Grid.Column="0" Grid.Row="0" Style="{StaticResource Flag}" Content="pack://application:,,,/Resources/Images/Tools/карандаш2.png"  Checked="RB_Checked" Click="RB_Clicked"/>
                        <RadioButton GroupName="Tools" Grid.Column="1" Grid.Row="0" Style="{StaticResource Flag}" Content="pack://application:,,,/Resources/Images/Tools/стиль1_аэрозоль.png"  Checked="RB_Checked" Click="RB_Clicked"/>
                        <RadioButton GroupName="Tools" Grid.Column="2" Grid.Row="0" Style="{StaticResource Flag}" Content="pack://application:,,,/Resources/Images/Tools/text.png"  Checked="RB_Checked" Click="RB_Clicked"/>
                        <RadioButton GroupName="Tools" Grid.Column="0" Grid.Row="1" Style="{StaticResource Flag}" Content="pack://application:,,,/Resources/Images/Tools/стиль1_ластик.png"  Checked="RB_Checked" Click="RB_Clicked"/>
                    </Grid>
                    <Label Content="Инструменты"/>
                </StackPanel>
                <Separator Style="{StaticResource SeparatorKey}"/>
                <StackPanel>
                    <StackPanel.Resources>

                    </StackPanel.Resources>
                    <Image x:Name="SelectedBrushImage" Height="30" Width="30" Margin="0, 5, 0, 10"/>
                    <local:TextComboBox SelectionChanged="TextComboBox_SelectionChanged"  SelectedIndex="0" Style="{DynamicResource TextComboBoxStyle}" Capture="Кисти">

                        <ComboBoxItem>
                            <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_кисточка.png" Height="30" Width="30"/>
                        </ComboBoxItem>
                        <ComboBoxItem>
                            <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_жирная_кисточка.png" Height="30" Width="30"/>
                        </ComboBoxItem>
                        <ComboBoxItem>
                            <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_кисточка_толстая.png" Height="30" Width="30"/>
                        </ComboBoxItem>
                    </local:TextComboBox>
                </StackPanel>
                <Separator Style="{StaticResource SeparatorKey}"/>
                <DockPanel LastChildFill="False">
                    <Label DockPanel.Dock="Bottom" HorizontalAlignment="Center" Content="Фигуры"/>
                    <Grid Background="White" DockPanel.Dock="Left">
                        <Grid.Resources>
                            <Style x:Key="RadioButtonKey" TargetType="{x:Type RadioButton}">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                    <Border BorderBrush="Transparent" Background="Transparent" BorderThickness="1">
                                                        <Canvas Background="Transparent" Height="20px" Width="20px" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                            <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Height="20px" Width="20px"/>
                                                        </Canvas>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                    <Border BorderBrush="Aqua" Background="AliceBlue" BorderThickness="1">
                                                        <Canvas Height="20px" Width="20px" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                            <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Height="20px" Width="20px"/>
                                                        </Canvas>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <RadioButton GroupName="Shapes" Grid.Column="0" Grid.Row="0" Style="{StaticResource RadioButtonKey}" Content="pack://application:,,,/Resources/Images/Shapes/квадрат.png"  Checked="RB_Checked" Click="RB_Clicked"/>
                        <RadioButton GroupName="Shapes" Grid.Column="1" Grid.Row="0" Style="{StaticResource RadioButtonKey}" Content="pack://application:,,,/Resources/Images/Shapes/круг.png"  Checked="RB_Checked" Click="RB_Clicked"/>
                        <Rectangle Grid.Column="2" Grid.Row="0" Width="21px"/>
                        <Rectangle Grid.Column="1" Grid.Row="1" Height="21px" VerticalAlignment="Top"/>
                    </Grid>
                    <StackPanel DockPanel.Dock="Right">
                        <Grid>
                            <ComboBox x:Name="contourList" Text="Контур" Style="{DynamicResource EmptyComboBoxStyle}">
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_кисточка.png" Height="30" Width="30"/>
                                        <Separator Style="{DynamicResource SeparatorKey}"></Separator>
                                        <Label>Кисть 1</Label>
                                    </StackPanel>
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_жирная_кисточка.png" Height="30" Width="30"/>
                                        <Separator Style="{DynamicResource SeparatorKey}"></Separator>
                                        <Label>Кисть 2</Label>
                                    </StackPanel>
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_кисточка_толстая.png" Height="30" Width="30"/>
                                        <Separator Style="{DynamicResource SeparatorKey}"></Separator>
                                        <Label>Кисть 3</Label>
                                    </StackPanel>
                                </ComboBoxItem>
                            </ComboBox>
                            <StackPanel Orientation="Horizontal" >
                                <Image Source="pack://application:,,,/Resources/Images/Shapes/карандаш.png" Height="20px" Width="20px"  IsHitTestVisible="False"/>
                                <TextBlock Text="Контур" Margin="5, 0, 20, 0" IsHitTestVisible="False" Height="22" VerticalAlignment="Bottom" />
                            </StackPanel>
                        </Grid>
                        <Grid>
                            <ComboBox x:Name="fillList" Style="{DynamicResource EmptyComboBoxStyle}">
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_кисточка.png" Height="30" Width="30"/>
                                        <Separator Style="{DynamicResource SeparatorKey}"></Separator>
                                        <Label>Кисть 1</Label>
                                    </StackPanel>
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_жирная_кисточка.png" Height="30" Width="30"/>
                                        <Separator Style="{DynamicResource SeparatorKey}"></Separator>
                                        <Label>Кисть 2</Label>
                                    </StackPanel>
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/Resources/Images/Brushes/стиль1_кисточка_толстая.png" Height="30" Width="30"/>
                                        <Separator Style="{DynamicResource SeparatorKey}"></Separator>
                                        <Label>Кисть 3</Label>
                                    </StackPanel>
                                </ComboBoxItem>
                            </ComboBox>
                            <StackPanel Orientation="Horizontal" >
                                <Image Source="pack://application:,,,/Resources/Images/Shapes/стиль1_аэрозоль.png" Height="20px" Width="20px"  IsHitTestVisible="False"/>
                                <TextBlock Text="Заливка" Margin="5, 0, 20, 0" IsHitTestVisible="False" />
                            </StackPanel>
                        </Grid>
                    </StackPanel>

                </DockPanel>
                <Separator Style="{StaticResource SeparatorKey}"/>
                <StackPanel>
                    <Image Height="30" Source="pack://application:,,,/Resources/Images/Lines/виды линии.png" Width="30" Margin="0, 5, 0, 10"/>
                    <local:TextComboBox SelectionChanged="LineComboBox_Selected" SelectedIndex="0" Style="{DynamicResource TextComboBoxStyle}" Capture="Линии">
                        <ComboBoxItem>
                            <Image Source="pack://application:,,,/Resources/Images/Lines/тонкая линия.png" Height="50" Width="50"/>
                        </ComboBoxItem>
                        <ComboBoxItem>
                            <Image Source="pack://application:,,,/Resources/Images/Lines/средняя линия.png" Height="50" Width="50"/>
                        </ComboBoxItem>
                        <ComboBoxItem>
                            <Image Source="pack://application:,,,/Resources/Images/Lines/толстая линия.png" Height="50" Width="50"/>
                        </ComboBoxItem>
                    </local:TextComboBox>
                </StackPanel>
                <Separator Style="{StaticResource SeparatorKey}"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <RadioButton GroupName="GroupColor" Grid.Column="0" Grid.Row="0" Style="{StaticResource TextRadioButton}" Height="22px" Width="50px" Content="Color 1"></RadioButton>
                    <RadioButton GroupName="GroupColor"  Grid.Column="0" Grid.Row="1" Style="{StaticResource TextRadioButton}" Height="22px" Content="Color 2"></RadioButton>
                    <xctk:ColorPicker Name="ClrPcker_Color1" Grid.Column="1" Grid.Row="0" SelectedColorChanged="ClrPcker_Background_SelectedColorChanged" Margin="5, 5, 5, 5" Width="50px" Height="22px" DisplayColorAndName="False"></xctk:ColorPicker >
                    <xctk:ColorPicker Name="ClrPcker_Color2" Grid.Column="1" Grid.Row="1" SelectedColorChanged="ClrPcker_Background_SelectedColorChanged" Margin="5, 5, 5, 5" Width="50px" Height="22px" DisplayColorAndName="False"></xctk:ColorPicker>
                </Grid>
            </StackPanel>

        </StackPanel>
        <xctk:Zoombox ZoomOn="Content" IsUsingScrollBars="True" DockPanel.Dock="Bottom" >
            <Image x:Name="ImageToRedact"></Image>
        </xctk:Zoombox>
    </DockPanel>
</Window>
